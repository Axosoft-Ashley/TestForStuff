name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      sha:
        description: Specify the SHA to build
        required: true
      environment:
        type: choice
        description: Select the environment
        required: true
        options:
          - dev
          - staging
          - prod

jobs:
  Deploy-Dev:
    if: ${{ inputs.environment == 'dev'}}
    uses: ./.github/workflows/deploy-to-cluster.yaml
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
      POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    with:
      SHA: ${{inputs.sha}}
      environment: 'dev'
      NEW_IMAGE_TAG: 'dev'
      ECR_ACCOUNT: '953684725979'
      ECR_REPO: 'api-service'
      AWS_REGION: 'us-east-1'
      ECS_CLUSTER: 'dev-prv'
      DEPLOYMENT_TYPE: 'manual'
  Test-Dev:
    needs: [ Deploy-Dev ]
    uses: ./.github/workflows/integration-tests.yaml
    secrets:
      POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    with:
      SHA: ${{inputs.sha}}
      environment: 'dev'
      POSTMAN_ENVIRONMENT_UUID: '27038339-03ddd4ab-2ac1-4f6c-b0ea-a7ed1a49cd53'
  Deploy-Staging:
    if: ${{ inputs.environment == 'staging'}}
    uses: ./.github/workflows/deploy-to-cluster.yaml
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
      POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    with:
      SHA: ${{inputs.sha}}
      environment: 'staging'
      NEW_IMAGE_TAG: 'staging'
      ECR_ACCOUNT: '953684725979'
      ECR_REPO: 'api-service'
      AWS_REGION: 'us-east-1'
      ECS_CLUSTER: 'staging-prv'
      DEPLOYMENT_TYPE: 'manual'
  Test-Staging:
    needs: [ Deploy-Staging ]
    uses: ./.github/workflows/integration-tests.yaml
    secrets:
      POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    with:
      SHA: ${{inputs.sha}}
      environment: 'staging'
      POSTMAN_ENVIRONMENT_UUID: '27080905-7c894133-61df-4af9-bbff-6e2c1c09c391'
  Deploy-Prod:
    if: ${{ inputs.environment == 'prod'}}
    uses: ./.github/workflows/deploy-to-cluster.yaml
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
      POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    with:
      SHA: ${{inputs.sha}}
      environment: 'prod'
      NEW_IMAGE_TAG: 'prod'
      ECR_ACCOUNT: '953684725979'
      ECR_REPO: 'api-service'
      AWS_REGION: 'us-east-1'
      ECS_CLUSTER: 'prod-prv'
      DEPLOYMENT_TYPE: 'manual'
  Test-Prod:
    needs: [ Deploy-Prod ]
    uses: ./.github/workflows/integration-tests.yaml
    secrets:
      POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    with:
      SHA: ${{inputs.sha}}
      environment: 'prod'
      POSTMAN_ENVIRONMENT_UUID: '27080905-54654add-7b43-4e1d-a4d3-e2ff6d0a0b9f'
